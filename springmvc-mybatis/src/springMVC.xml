<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        				   http://www.springframework.org/schema/mvc 
        				   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       					   http://www.springframework.org/schema/context 
       					   http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 1.添加spring注解扫描控制层基本包（扫描spring的相关注解,applicationContext.xml配置了还需要配置） -->
	<context:component-scan base-package="com.zsx.controller"></context:component-scan>
	
	<!-- 6.配置springMVC三大组件 -->
	<!-- 6.1配置处理器映射器和处理器适配器（使用注解驱动） -->
	<mvc:annotation-driven conversion-service="formattingConversionServiceFactoryBean"/>
	<!-- 6.1.1配置格式转换服务工厂bean -->
	<bean id="formattingConversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 配置自定义转换器 -->
		<property name="converters">
			<list>
				<bean class="com.zsx.converter.DateConverter"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 6.2配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置异常处理器（自己实现的） -->
	<bean class="com.zsx.exception.CustomExceptionResolver"></bean>
	
	<!-- 配置文件上传处理器（id必须为：multipartResolver，不能更改！！！！！！！！） -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 可以注入参数来对上传的文件进行限制（单位：B） -->
		<property name="maxUploadSize" value="5000000"></property>
	</bean>
	
	<!-- 配置多个拦截器 -->
	<mvc:interceptors>
		<!-- 拦截器执行顺序：按照配置的顺序依次执行（前方法按此顺序，后方法与页面渲染后方法按此逆序，类似struts2中的拦截器） -->
		<mvc:interceptor>
			<!-- mvc:mapping表示此拦截器作用的范围，/**表示所有，（拦截的路径eg：/aaa/bbb） -->
			<mvc:mapping path="/**"/>
			<!-- 配置自定义的拦截器 -->
			<bean class="com.zsx.interceptor.MyIntercepter"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>